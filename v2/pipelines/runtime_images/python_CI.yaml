pr:
  paths:
    include: 
      - "../../src/python/*"
      - "../../src/common/*"

variables:
  - name: ascName
    value: WAWS_Container_Images
  
  - name: acrName
    value: wawsimages.azurecr.io
    
  - name: baseImageName
    value: mcr.microsoft.com/oryx
  
  - name: baseImageVersion
    value: "20220502.2"

  - name: stackName
    value: "python"

parameters:
  - name: Python_27
    displayName: Python 2.7
    type: boolean
    default: true

  - name: Python_36
    displayName: Python 3.6
    type: boolean
    default: true

  - name: Python_37
    displayName: Python 3.7
    type: boolean
    default: true

  - name: Python_38
    displayName: Python 3.8
    type: boolean
    default: true

  - name: Python_39
    displayName: Python 3.9
    type: boolean
    default: true

  - name: Python_310
    displayName: Python 3.10
    type: boolean
    default: true

resources:
- repo: self
  fetchDepth: 15

jobs:
- job: Job_CleanUp
  displayName: Clean Machine
  pool:
    vmImage: ubuntu-18.04
  timeoutInMinutes: 150
  steps:
  - template: ../cleanup_job.yaml

- ${{ if eq(parameters.Python_27, true) }}:
  - job: Job_Build_Python_27_Image
    displayName: Build Python 2.7 Image
    dependsOn: Job_CleanUp
    pool:
      vmImage: ubuntu-18.04
    timeoutInMinutes: 100

    steps:
    - task: ComponentGovernanceComponentDetection@0

    - task: ShellScript@2
      displayName: 'Generate Dockerfile and its dependencies'
      inputs:
        scriptPath: $(System.DefaultWorkingDirectory)/v2/src/generate_dockerfiles_for_runtime_images.sh
        args: ${{ variables.stackName }} $(Build.ArtifactStagingDirectory) ${{ variables.baseImageName }} ${{ variables.baseImageVersion }} $(System.DefaultWorkingDirectory)/v2/src/python 2.7
    
    - task: Docker@2
      displayName: Logout of ACR
      inputs:
        command: logout
        azureSubscriptionEndpoint: ${{ variables.ascName }}
        azureContainerRegistry: ${{ variables.acrName }}

    - task: Docker@1
      displayName: Container registry login
      inputs:
        command: login
        azureSubscriptionEndpoint: ${{ variables.ascName }}
        azureContainerRegistry: ${{ variables.acrName }}

    - task: ShellScript@2
      displayName: 'Build Images'
      inputs:
        scriptPath: $(System.DefaultWorkingDirectory)/v2/src/build_and_push_runtime_images.sh
        args: $(Build.ArtifactStagingDirectory) appsvctest $(System.DefaultWorkingDirectory)/v2/src/python $(Build.BuildNumber) ${{ variables.stackName }} $(Build.Reason) 2.7

trigger: none