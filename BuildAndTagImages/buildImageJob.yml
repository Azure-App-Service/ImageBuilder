parameters:
  ascName: WAWS_Container_Images
  acrName: wawsimages.azurecr.io
  stackName: ""
  imgTag: "$(Build.BuildNumber)"
  filesRootPath: "GitRepo"
  stackVersion: ""

steps:
- script: |
    if [ "$(InitialChecks)" != "true" ]
    then
      echo "Invalid configuration."
      echo "Variable 'InitialChecks' needs to be 'true' to run this build."
      exit 1
    fi
  displayName: 'Validate pipeline run'

- task: Docker@2
  displayName: Logout of ACR
  inputs:
    command: logout
    azureSubscriptionEndpoint: ${{ parameters.ascName }}
    azureContainerRegistry: ${{ parameters.acrName }}

- task: Docker@1
  displayName: Container registry login
  inputs:
    command: login
    azureSubscriptionEndpoint: ${{ parameters.ascName }}
    azureContainerRegistry: ${{ parameters.acrName }}

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Artifacts'
  inputs:
    artifactName: drop

- task: ShellScript@2
  displayName: 'Build Images'
  inputs:
    scriptPath: ./BuildAndTagImages/build.sh
    args: $(Build.ArtifactStagingDirectory)/drop appsvctest $(System.DefaultWorkingDirectory)/Config $(Build.BuildNumber) ${{ parameters.stackName }} $(Build.Reason) ${{ parameters.filesRootPath }} ${{ parameters.imgTag }} ${{ parameters.stackVersion }}
  env:
    DIAGNOSTICSERVER_NUGETTOKEN: $(DiagnosticServer_NugetToken)

# Publish Build Artifacts
# Publish build artifacts to Azure Pipelines/TFS or a file share
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Artifacts'
  inputs:
    artifactName: drop

- task: ShellScript@2
  displayName: 'Run unit tests'
  inputs:
    scriptPath: ./localRunTests.sh
    args: ${{ parameters.stackName }} $(Build.ArtifactStagingDirectory)
