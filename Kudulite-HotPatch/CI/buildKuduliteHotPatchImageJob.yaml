parameters:
  ascName: WAWS_Linux_Container_Images_Subscription
  acrName: wawsimages.azurecr.io
  stackName: "kudulite"
  imgTagForStretchBasedKudulite: "$(Build.BuildNumber)"
  imgTagForBusterBasedKudulite: "buster_$(Build.BuildNumber)"
  filesRootPathForStretchBasedKudulite: "GitRepo"
  filesRootPathForBusterBasedKudulite: "GitRepo-DynInst"

steps:
- script: |
    if [ "$(InitialChecks)" != "true" ]
    then
      echo "Invalid configuration."
      echo "Variable 'InitialChecks' needs to be 'true' to run this build."
      exit 1
    fi
  displayName: 'Validate pipeline run'

- task: Docker@2
  displayName: Logout of ACR
  inputs:
    command: logout
    azureSubscriptionEndpoint: ${{ parameters.ascName }}
    azureContainerRegistry: ${{ parameters.acrName }}

- task: Docker@1
  displayName: Container registry login
  inputs:
    command: login
    azureSubscriptionEndpoint: ${{ parameters.ascName }}
    azureContainerRegistry: ${{ parameters.acrName }}

- task: DownloadBuildArtifacts@0
  displayName: 'Download Build Artifacts'
  inputs:
    artifactName: drop

- task: ShellScript@2
  displayName: 'Build Kudulite Stretch based Image'
  inputs:
    scriptPath: ./Kudulite-HotPatch/Scripts/buildKuduliteHotPatchImage.sh
    args: $(Build.ArtifactStagingDirectory)/drop appsvctest $(System.DefaultWorkingDirectory)/Config $(Build.BuildNumber) ${{ parameters.stackName }} $(Build.Reason) ${{ parameters.filesRootPathForStretchBasedKudulite }} ${{ parameters.imgTagForStretchBasedKudulite }}    

- task: ShellScript@2
  displayName: 'Build Kudulite Buster based Image'
  inputs:
    scriptPath: ./Kudulite-HotPatch/Scripts/buildKuduliteHotPatchImage.sh
    args: $(Build.ArtifactStagingDirectory)/drop appsvctest $(System.DefaultWorkingDirectory)/Config $(Build.BuildNumber) ${{ parameters.stackName }} $(Build.Reason) ${{ parameters.filesRootPathForBusterBasedKudulite }} ${{ parameters.imgTagForBusterBasedKudulite }}    
